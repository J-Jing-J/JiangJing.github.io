{"version":3,"file":"static/js/170.abf07747.chunk.js","mappings":"+JAAIA,EAAOC,EAAOC,EAAQC,E,UAEtBC,EAAY,CAAC,QAAS,WAE1B,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,GAAkBH,EAASY,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASoB,EAAaC,EAAMC,GAC1B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQd,EAAyBU,EAAMzB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtD6B,EAAG,cACHC,UAAW,OACXC,QAAS,gBACTC,MAAO,6BACP,OAAQ,MACRC,WAAY,+BACZC,MAAO,IACPC,OAAQ,IACRC,IAAKX,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DW,GAAIV,GACHD,GAAS,KAAM/B,IAAUA,EAAqB,gBAAoB,OAAQ,KAAmB,gBAAoB,QAAS,CAC3H2C,KAAM,eACF1C,IAAUA,EAAqB,gBAAoB,OAAQ,CAC/D2C,EAAG,wqEACHC,KAAM,UACN,OAAQ,SACL3C,IAAWA,EAAsB,gBAAoB,OAAQ,CAChE0C,EAAG,ojBACHC,KAAM,UACN,OAAQ,SACL1C,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEyC,EAAG,+0BACHC,KAAM,UACN,OAAQ,UAIZ,IAAIC,EAA0B,aAAiBlB,GAC/C,IAAe,IAA0B,gE,wXCxC5BmB,EAAM,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,gBAAoBC,GAA0B,YAC3E,OAAO,SAAC,KAAD,QACLC,MAAO,EACPC,MAAOJ,EAAU,EAAI,EACrBK,SAAU,SAAAC,GAAG,cAAIL,QAAJ,IAAIA,OAAJ,EAAIA,IAAoBK,KACjCJ,K,oECXKK,EAAY,SACvBC,EACAC,GAEA,IAAMC,GAAcC,EAAAA,EAAAA,kBACpB,MAAO,CACLC,UAAW,kBAAMF,EAAYG,kBAAkBL,IAEzCM,SAHD,SAGUtD,GAAc,OAAD,4GAEpBuD,EAAgBL,EAAYM,aAAaR,GAG/CE,EAAYO,aAAaT,GAAU,SAACU,GAClC,OAAOT,EAASjD,EAAQ0D,MANA,kBAQnB,CAAEH,cAAAA,IARiB,8CAW5BI,QAdK,SAcGC,EAAYC,EAAcC,GAEhCZ,EAAYO,aAAaT,EAAUc,EAAQP,kBCTpCQ,EAAoB,SAACC,GAChC,IAAMC,GAASC,EAAAA,EAAAA,KAQf,OAAOC,EAAAA,EAAAA,UAA8B,CAAC,iBAAkBH,IAAe,kBAAMC,EAAO,iBAAkB,CAAEG,MAAMC,EAAAA,EAAAA,IAAYL,GAAgB,UAI/HM,EAAwB,SAACtB,GACpC,IAAMiB,GAASC,EAAAA,EAAAA,KAaf,OAAOK,EAAAA,EAAAA,cACL,SAACC,GAAD,OACEP,EAAO,kBAAD,OAAmBO,EAAOtC,IAAM,CACpCuC,OAAQ,QACRL,KAAMI,MDXe,SAACxB,GAAD,OAC3BD,EACEC,GACA,SAAChD,EAAQ0D,GAAT,OACK,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKgB,KAAI,SAACC,GAAD,OACPA,EAAKzC,KAAOlC,EAAOkC,IAAnB,kBAA6ByC,GAAS3E,GAAW2E,OAC9C,MCQPC,CAAc5B,KAKL6B,EAAuB,SAAC7B,GACnC,IAAMiB,GAASC,EAAAA,EAAAA,KAYf,OAAOK,EAAAA,EAAAA,cACL,SAACC,GAAD,OAAwCP,EAAO,iBAAkB,CAC/DQ,OAAQ,OACRL,KAAMI,MD3BgB,SAACxB,GAAD,OAC1BD,EAAUC,GAAU,SAAChD,EAAQ0D,GAAT,OAAkBA,EAAG,kBAAOA,GAAP,CAAY1D,IAAU,MC6B7D8E,CAAa9B,KAKJ+B,EAA0B,SAAC/B,GACtC,IAAMiB,GAASC,EAAAA,EAAAA,KACf,OAAOK,EAAAA,EAAAA,cACL,gBAAGrC,EAAH,EAAGA,GAAH,OAA4B+B,EAAO,kBAAD,OAAmB/B,GAAM,CACzDuC,OAAQ,aDrDiB,SAACzB,GAAD,OAC7BD,EACEC,GACA,SAAChD,EAAQ0D,GAAT,OAAoB,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKsB,QAAO,SAACL,GAAD,OAAUA,EAAKzC,KAAOlC,EAAOkC,QAAO,MCqDjE+C,CAAgBjC,K,UC/EPkC,EAAmB,SAAmBpE,GACjD,OAAuBqE,EAAAA,EAAAA,MAAhBC,GAAP,eACMC,EAAkBC,IACxB,GAAoBC,EAAAA,EAAAA,UAASzE,GAAtB0E,GAAP,eACA,MAAO,EAELC,EAAAA,EAAAA,UACE,kBACEC,EAAAA,EAAAA,IAAO5F,OAAO6F,YAAYP,GAAeI,KAG3C,CAACJ,EAAcI,IAEjB,SAAChB,GACC,OAAOa,EAAgBb,MAQhBc,EAAuB,WAClC,OAAuCH,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAqBQ,EAArB,KAEA,OAAO,SAACpB,GACN,IAAMqB,GAAIxB,EAAAA,EAAAA,KAAY,kBACjBvE,OAAO6F,YAAYP,IACnBZ,IAEL,OAAOoB,EAAeC,KC7BbC,EAAgC,WAO3C,MAAwCZ,EAAiB,CAAC,QAAS,WAAnE,eAAOlB,EAAP,KAAqB+B,EAArB,KACA,MAAO,EACLN,EAAAA,EAAAA,UAAQ,0BAAC,UAAWzB,GAAZ,IAA0BgC,OAAQC,OAAOjC,EAAagC,cAAWE,MAAc,CAAClC,IACxF+B,IAKSI,EAA2B,WACtC,MAAiBL,IACjB,MAAO,CAAC,kBADR,iBAKWM,EAAwB,WACnC,MAA0DlB,EAAiB,CACzE,wBADF,eAASmB,EAAT,KAASA,oBAAuBC,EAAhC,KAGA,EAAgEpB,EAAiB,CAC/E,2BADF,eAASqB,EAAT,KAASA,uBAA0BC,EAAnC,KAIMC,EAAenB,IACrB,EFqD8B,SAACpD,GAC/B,IAAM+B,GAASC,EAAAA,EAAAA,KACf,OAAOC,EAAAA,EAAAA,UAGL,CAAC,gBAAiB,CAAEjC,GAAAA,KACpB,kBAAM+B,EAAO,gBAAD,OAAiB/B,MAE7B,CAAEwE,QAASC,QAAQzE,KE7D6B0E,CAAiBX,OAAOM,IAA5DM,EAAd,EAAQzC,KAA4B0C,EAApC,EAAoCA,UAYpC,MAAO,CAGLC,uBAAgD,SAAxBV,GAAkCM,QAAQJ,GAClES,KAbW,kBAAMV,EAAuB,CAAED,qBAAqB,KAc/DY,MATY,kBAAMR,EAAa,CAAEJ,oBAAqB,GAAIE,uBAAwB,MAUlFW,UARgB,SAAChF,GAAD,OAAgBsE,EAA0B,CAAED,uBAAwBrE,KASpF2E,qBAAAA,EACAC,UAAAA,I,yBC5BSK,EAAOC,EAAAA,MAAW,YAAkD,IAA/CC,EAA8C,EAA9CA,mBAAuB5F,GAAuB,YAEtE6F,IADSC,EAAAA,EAAAA,MAATC,KACWlD,EAAsB6B,KAAjCmB,QAGR,OAAO,SAAC,KAAD,QACLG,OAAQ,KACRC,SAAO,EACPC,YAAY,EACZC,QAAS,CACP,CACErG,OAAO,SAACgB,EAAD,CAAKC,SAAS,EAAMqF,UAAU,IACrCC,OAFF,SAESlF,EAAOmF,GAEZ,OAAO,SAACxF,EAAD,CAAKC,QAASuF,EAAcC,IAAKvF,iBAXtBP,EAWwD6F,EAAc7F,GAXvD,SAAC8F,GAAD,OAAkBV,EAAO,CAAEpF,GAAAA,EAAI8F,IAAAA,QAA/C,IAAC9F,IActB,CACEX,MAAO,2BAEP0G,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAE3G,MAAM6G,cAAcD,EAAE5G,QAC1CuG,OAJF,SAISlF,EAAOmF,GAEZ,OAAO,SAAC,KAAD,CAAMM,GAAIC,OAAOP,EAAc7F,IAA/B,SAAqC6F,EAAcxG,UAG9D,CACEA,MAAO,eACPgH,UAAW,eAEb,CACEhH,MAAO,eACPgH,UAAW,aAEb,CACEhH,MAAO,2BACPuG,OAFF,SAESlF,EAAOmF,GAAgB,IAAD,EAC3B,OAAO,2BACJ,UAAAV,EAAmBmB,MAAK,SAAArG,GAAI,OAAIA,EAAKD,KAAO6F,EAAc/B,iBAA1D,eAAmEyC,OAAQ,2CAIlF,CACElH,MAAO,2BACPuG,OAFF,SAESlF,EAAOmF,GACZ,OAAO,0BAEHA,EAAcW,WAAaC,GAAAA,CAAMZ,EAAcW,YAAYE,OAAO,cAAgB,aAK1F,CACEd,OADF,SACSlF,EAAOmF,GACZ,OAAO,SAACc,EAAD,CAAMd,cAAeA,QAK9BtG,OAKFoH,EAAO,SAAC,GAA6D,IAG9C3G,EAHb6F,EAA0D,EAA1DA,cACNP,GAASD,EAAAA,EAAAA,MAATC,KACAN,EAAcd,IAAdc,UAEQ4B,EAAwB/D,EAAwBoB,KAAxDmB,OAWR,OAAO,SAAC,IAAD,CACLyB,SACE,SAAC,IAAD,UAEuB,KAAf,OAAJvB,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,WACJ,iCACE,SAAC,SAAD,CAAwBC,SAlBT/G,EAkBoC6F,EAAc7F,GAlBnC,kBAAMgF,EAAUhF,KAkB9C,yBAAgB,SAChB,SAAC,SAAD,CAA0B+G,QAAS,kBAhBZ,SAAC/G,GAClCgH,EAAAA,EAAAA,QAAc,CACZ3H,MAAM,6CAAD,OAAYwG,EAAcxG,MAA1B,sBACL4H,QAAS,uCACTC,OAAQ,eACRC,WAAY,eACZC,KAAM,kBAAMR,EAAoB,CAAE5G,GAAAA,OAUeqH,CAA2BxB,EAAc7F,KAAlF,yBAAgB,aAEhB,OATL,UAaL,SAAC,KAAD,CAAiBC,KAAM,OAAvB,oB,uCCjHSqH,EAAwB,SAACC,GACpC,IAAMxF,GAASC,EAAAA,EAAAA,KACf,GAA2BwF,EAAAA,EAAAA,KAAnBC,EAAR,EAAQA,IAAQC,GAAhB,YAIA,OAHAC,EAAAA,EAAAA,YAAU,WACRF,EAAI1F,EAAO,qBAAsB,CAAEG,MAAMC,EAAAA,EAAAA,IAAYoF,GAAS,SAC7D,CAACA,IACGG,G,+DCGIE,EAAW,SAACrI,GACvB,IAAQmB,EAA8DnB,EAA9DmB,MAAOC,EAAuDpB,EAAvDoB,SAAUkH,EAA6CtI,EAA7CsI,kBAAmBC,EAA0BvI,EAA1BuI,QAAYtH,GAAxD,OAAsEjB,EAAtE,GACA,OAAO,UAAC,KAAD,gBACLmB,MAAc,OAAPoH,QAAO,IAAPA,GAAAA,EAAS7J,OAAS8J,EAASrH,GAAS,EAE3CC,SAAU,SAAAD,GAAK,cAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAWoH,EAASrH,SAAUsD,KAC7CxD,GAJC,cAQHqH,GAAoB,SAAC,WAAD,CAAenH,MAAO,EAAtB,SAA0BmH,IAAqC,KARhF,OAWHC,QAXG,IAWHA,OAXG,EAWHA,EAAStF,KAAI,SAAAwF,GAAM,OAAI,SAAC,WAAD,CAA+BtH,MAAOsH,EAAOhI,GAA7C,SAAkDgI,EAAOzB,MAArCyB,EAAOhI,YAOlD+H,EAAW,SAACrH,GAAD,OAAoBuH,MAAMlE,OAAOrD,IAAU,EAAIqD,OAAOrD,IC/B1DwH,GAA0B,SAAC3I,GACtC,IAAc4I,EAAUb,IAAhBpF,KACR,OAAO,SAAC0F,GAAD,QAAUE,QAASK,GAAS,IAAQ5I,KCgBhC6I,GAAc,SAAC,GAA4E,EAA1EjD,mBAA2E,IAAvDrD,EAAsD,EAAtDA,aAAc+B,EAAwC,EAAxCA,gBAO9D,OAAO,UAAC,IAAD,CAAMwE,OAAQ,SAAUC,MAAO,CAAEC,aAAc,QAA/C,WACL,SAAC,SAAD,WACE,SAAC,IAAD,CACEtI,KAAK,OACLuI,YAAa,2BACb9H,MAAOoB,EAAazC,MACpBsB,SAAU,SAAA8H,GACR5E,GAAgB,kBACX/B,GADU,IAEbzC,MAAOoJ,EAAI3K,OAAO4C,eAK1B,SAAC,SAAD,WACE,SAACwH,GAAD,CACEL,kBAAmB,2BACnBnH,MAAOoB,EAAagC,OACpBnD,SAAU,SAAAD,GAAK,OAAImD,GAAgB,kBAC9B/B,GAD6B,IAEhCgC,OAAQpD,cC9BLgI,GAA0B,WACrC,IAAQpD,GAASD,EAAAA,EAAAA,MAATC,KACAR,EAASZ,IAATY,MACR6D,EAAAA,EAAAA,IAAiB,4BAAQ,GACzB,MAAwC/E,IAAxC,eAAO9B,EAAP,KAAqB+B,EAArB,KAgBA,EAAkDhC,GAAkB+G,EAAAA,EAAAA,IAAY9G,EAAc,MAAtF8C,EAAR,EAAQA,UAAWlD,EAAnB,EAAmBA,MAAamH,EAAhC,EAA0B3G,KA4BZiD,EAAuBmC,IAA7BpF,KAKR,OACE,UAAC4G,GAAD,YAEE,UAAC,KAAD,CAAKC,SAAS,EAAd,WACE,qDAEqB,KAAf,OAAJzD,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,WACJ,SAAC,KAAD,CACEC,QAASjC,EACT7E,KAAM,OAFR,sCAKE,SAGR,SAACmI,GAAD,CAAajD,mBAAoBA,GAAsB,GAAIrD,aAAcA,EAAc+B,gBAAiBA,KACxG,SAAC,KAAD,CAAUnC,MAAOA,KACjB,SAACuD,EAAD,CAEEO,QAASZ,EACTO,mBAAoBA,GAAsB,GAC1C6D,WAAYH,GAAiB,SAarCH,GAAwBO,iBAAkB,EAE1C,I,8BAAMH,GAAYI,EAAAA,EAAAA,IAAH,4C,WC3GFC,GAA0B,WACrC,OAAO,0CCDIC,GAA6B,WACxC,OAAO,0CCGIC,GAA4B,YACvCV,EAAAA,EAAAA,IAAiB,gBAEjB,IAAMW,EAAuB,CAC3B,GAAM,EACN,MAAS,gBACT,YAAe,2BACf,OAAU,EACV,UAAa,IACb,KAAQ,6BACR,QAAW,qBACX,WAAc,gBACd,KAAQ,OACR,KAAO,GAGHC,EAAU,CACd,CACEhD,KAAM,6BAER,CACEA,KAAM,8BAGV,OAAO,iCACL,iCAAK+C,QAAL,IAAKA,OAAL,EAAKA,EAAsBjK,MAA3B,kBADK,OAGHkK,QAHG,IAGHA,OAHG,EAGHA,EAAS/G,KAAI,SAAAgH,GAAM,OAAI,yBACpBA,EAAOjD,cC1BHkD,GAAqB,WAChC,OAAO,4BACL,gDACA,SAAC,KAAD,CAAMnB,MAAO,CAAEoB,YAAa,QAAUvD,GAAI,QAA1C,2BACA,SAAC,KAAD,CAAMmC,MAAO,CAAEoB,YAAa,QAAUjK,UAAU,OAAO0G,GAAI,WAA3D,2BACA,SAAC,KAAD,CAAMmC,MAAO,CAAEoB,YAAa,QAAUjK,UAAU,OAAO0G,GAAI,UAA3D,2BACA,UAAC,KAAD,YACE,SAAC,KAAD,CAAOwD,KAAM,SAAUC,SAAS,SAACP,GAAD,OAChC,SAAC,KAAD,CAAOM,KAAM,OAAQC,SAAS,SAACT,GAAD,OAC9B,SAAC,KAAD,CAAOQ,KAAM,UAAWC,SAAS,SAACR,GAAD,OAEjC,SAAC,KAAD,CAAOO,KAAK,IAAIC,SAAS,SAAC,KAAD,CAAUzD,GAAI0D,OAAOC,SAASC,SAAW,UAAWC,SAAS,a,iCCT/EC,GAAqB,WAChC,MAA2E/F,IAAnEW,EAAR,EAAQA,uBAAwBE,EAAhC,EAAgCA,MAAOJ,EAAvC,EAAuCA,qBAAsBC,EAA7D,EAA6DA,UAG7D,GAF+BD,EAAuBvC,EAAwBO,GAEEsB,KAAxEiG,EAAR,EAAQA,YAAaxI,EAArB,EAAqBA,MAAkByI,EAAvC,EAA4BvF,UAC5B,GAAewF,EAAAA,GAAAA,KAARC,GAAP,eAgBMhL,EAAQsF,EAAuB,2BAAS,2BAO9C,OALAgD,EAAAA,EAAAA,YAAU,WACR0C,EAAKC,eAAe3F,KACnB,CAACA,EAAsB0F,KAGnB,SAAC,KAAD,CACLE,aAAa,EACb1K,MAAO,OACP2K,QAAS3F,EACT4F,QAjBiB,WAEjBJ,EAAKK,cACL3F,KAUK,UAML,UAAC4F,GAAD,WACG/F,GAAY,SAAC,KAAD,CAAMgG,KAAM,WAAc,iCACrC,wBAAKvL,KACL,SAAC,KAAD,CAAUqC,MAAOA,KACjB,UAAC,IAAD,CACE2G,OAAQ,WACRC,MAAO,CAAEzI,MAAO,SAChBgL,SAlCS,SAACC,GAChBZ,GAAY,kBAAKvF,GAAyBmG,IAAUC,MAAK,WACvDV,EAAKK,cACL3F,QAgCIsF,KAAMA,EAJR,WAME,SAAC,SAAD,CACEW,MAAO,eACPzE,KAAM,QACN0E,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,yCAHrC,UAKE,SAAC,IAAD,CAAO3C,YAAY,kDAErB,SAAC,SAAD,CACEwC,MAAO,eACPzE,KAAM,SACN0E,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,+CAHrC,UAKE,SAACjD,GAAD,CACEL,kBAAmB,kDAGvB,SAAC,SAAD,CACEmD,MAAO,eACPzE,KAAM,YACN0E,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,mCAHrC,UAKE,SAAC,IAAD,CAAO3C,YAAY,sCAErB,SAAC,SAAD,CACEwC,MAAO,2BACPzE,KAAM,cAFR,UAIE,SAAC,IAAD,CAAOiC,YAAY,0EAErB,SAAC,SAAD,CAAWF,MAAO,CAAE8C,UAAW,SAA/B,UACE,SAAC,IAAD,CACE5F,QAAS2E,EACTlK,KAAM,UACNoL,SAAU,SAHZ,mCASN,mCACA,SAAC,IAAD,CAAQtE,QAAShC,EAAjB,gCAKA4F,GAAazB,EAAAA,EAAAA,IAAH,4I,4CC3FHoC,GAAuB,WAElC,IAAQhG,GAASD,EAAAA,EAAAA,MAATC,KACAR,EAASZ,IAATY,KAER,EAA4CjD,IAA9B0J,EAAd,EAAQrJ,KACFsJ,GADN,EAA8B5G,UACJ,OAAG2G,QAAH,IAAGA,OAAH,EAAGA,EAAgBzI,QAAO,SAAC+C,GAAD,OAAmBA,EAAcC,QAE/EmB,GAAU,UAACwE,GAAD,YACd,SAAC,UAAD,wCACA,SAAC,MAAD,iBAEID,QAFJ,IAEIA,OAFJ,EAEIA,EAAsBhJ,KAAI,SAACkJ,GAAD,OAAY,SAAC,WAAD,WACpC,SAAC,gBAAD,CAAgBrM,MAAOqM,EAAOrM,eAKf,KAAf,OAAJiG,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,WACJ,iCACE,SAAC,KAAD,KACA,SAAC,KAAD,CACEC,QAASjC,EACT7E,KAAM,OAFR,yCAKK,QAIb,OAAO,SAAC,KAAD,CACL0L,UAAW,SACX1E,QAASA,EAFJ,UAIL,0DAMEwE,GAAmBvC,EAAAA,EAAAA,IAAH,+CC/BtB,cAEE,OAAO,SAAC,GAAD,WAEL,UAAC,KAAD,YAEE,SAAC0C,GAAD,KACA,SAACC,GAAD,WAIE,UAAC,KAAD,YAEE,SAAC,KAAD,CACElC,KAAM,kBACNC,SAAS,SAAClB,GAAD,OAUX,SAAC,KAAD,CAAOiB,KAAM,qCAAsCC,SAAS,SAACH,GAAD,OAC5D,SAAC,KAAD,CAAOE,KAAK,IAAIC,SAAS,SAAC,KAAD,CAAUzD,GAAG,kBAAkB6D,SAAS,YAGrE,SAAC8B,GAAD,qBACA,SAACC,GAAD,sBACA,SAAC9B,GAAD,UASA2B,GAAa,WACjB,OAAO,UAACI,GAAD,CAAQjD,SAAS,EAAjB,WACL,UAACkD,GAAD,CAAYC,KAAK,EAAjB,WACE,SAAC,KAAD,CAAiBjM,KAAM,OAAQ8G,QAASoF,EAAAA,GAAxC,UAEE,SAAC,KAAD,CAAW7D,MAAO,CAAE8D,QAAS,IAAOtM,OAAQ,OAAQD,MAAO,OAAQwM,MAAO,yBAG5E,eAAI/D,MAAO,CAAEgE,WAAY,QAAzB,6CACA,4CAEA,SAAChB,GAAD,KACA,wDACA,kDACA,6EAEF,SAACiB,GAAD,WACE,SAACC,GAAD,UAKAA,GAAO,WACX,OAAyBnH,EAAAA,EAAAA,MAAjBC,EAAR,EAAQA,KAAMmH,EAAd,EAAcA,OACd,OAAO,SAAC,IAAD,CACL5F,SACE,UAAC,IAAD,WAEuB,KAAf,OAAJvB,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,UAAiB,qBAAQ,4BAEjC,SAAC,SAAD,WAEE,SAAC,IAAD,CAAQ7G,KAAM,OAAQ8G,QAAS0F,EAA/B,2BAFc,aANf,UAWL,UAAC,IAAD,CAAQxM,KAAM,OAAQ8G,QAAS,SAAA2F,GAAC,OAAIA,EAAEC,kBAAtC,uBAA4DrH,QAA5D,IAA4DA,OAA5D,EAA4DA,EAAMiB,WAKhEuC,GAAYI,EAAAA,EAAAA,IAAH,ocAmBF8C,IAAS9C,EAAAA,EAAAA,GAAO0D,EAAAA,GAAP1D,CAAH,8IAUN+C,IAJM/C,EAAAA,EAAAA,GAAH,mDAIUA,EAAAA,EAAAA,GAAO0D,EAAAA,GAAP1D,CAAH,yBAEVqD,GAAcrD,EAAAA,EAAAA,IAAH,8BAGlB2C,GAAO3C,EAAAA,EAAAA,KAAH,wCACJ4C,GAAQ5C,EAAAA,EAAAA,MAAH,yCACL6C,GAAS7C,EAAAA,EAAAA,OAAH","sources":["assets/login-logo.svg","components/pin.tsx","utils/use-optimistic-options.ts","utils/questionnaire.ts","utils/url.ts","screens/questionnaire-list/util.ts","screens/questionnaire-list/list.tsx","utils/questionnaire-types.ts","components/id-select.tsx","components/type-select.tsx","screens/questionnaire-list/search-panel.tsx","screens/questionnaire-list/index.tsx","screens/edit/index.tsx","screens/setting/index.tsx","screens/report/index.tsx","screens/questionnaire/index.tsx","screens/questionnaire-list/questionnaire-modal.tsx","components/questionnaire-popover.tsx","authenticated-app.tsx"],"sourcesContent":["var _defs, _path, _path2, _path3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLoginLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1647186955811,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 28958,\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 200,\n    height: 200,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M528.85333333 486.08l-16.32 17.70666667c-6.61333333-3.73333333-14.18666667-6.08-22.4-6.08-5.76 0-11.2 1.17333333-16.32 3.2L409.70666667 406.4c-0.10666667-0.21333333-0.42666667-0.32-0.53333334-0.53333333 7.14666667-6.93333333 11.62666667-16.64 11.62666667-27.30666667 0-21.12-17.17333333-38.18666667-38.18666667-38.18666667-21.12 0-38.18666667 17.17333333-38.18666666 38.18666667 0 7.57333333 2.34666667 14.72 6.18666666 20.58666667L277.12 472.53333333c-6.4-4.69333333-14.08-7.57333333-22.61333333-7.57333333-21.12 0-38.18666667 17.17333333-38.18666667 38.18666667 0 21.12 17.17333333 38.18666667 38.18666667 38.18666666 21.12 0 38.18666667-17.17333333 38.18666666-38.18666666 0-5.01333333-1.06666667-9.81333333-2.77333333-14.18666667l76.16-76.16c5.01333333 2.45333333 10.56 3.84 16.42666667 3.84 3.09333333 0 6.08-0.42666667 8.96-1.17333333 0.32 0.85333333 0.53333333 1.70666667 1.06666666 2.45333333l64.10666667 94.4c-7.46666667 8.10666667-12.16 18.88-12.16 30.82666667 0 25.17333333 20.48 45.65333333 45.65333333 45.65333333 25.17333333 0 45.65333333-20.48 45.65333334-45.65333333 0-9.49333333-2.88-18.24-7.89333334-25.6l16.21333334-17.6-15.25333334-13.86666667z m-274.34666666 34.66666667c-9.6 0-17.49333333-7.78666667-17.49333334-17.49333334 0-9.6 7.78666667-17.49333333 17.49333334-17.49333333s17.49333333 7.78666667 17.49333333 17.49333333c0 9.6-7.89333333 17.49333333-17.49333333 17.49333334z m128.10666666-124.69333334c-9.6 0-17.49333333-7.78666667-17.49333333-17.49333333 0-9.6 7.78666667-17.49333333 17.49333333-17.49333333 9.6 0 17.49333333 7.78666667 17.49333334 17.49333333-0.10666667 9.6-7.89333333 17.49333333-17.49333334 17.49333333zM674.13333333 288.53333333c-27.2 0-49.38666667 22.18666667-49.38666666 49.38666667 0 8.96 2.56 17.28 6.82666666 24.53333333l-58.98666666 63.89333334 22.93333333 21.12 59.2-64.21333334c5.97333333 2.56 12.58666667 4.05333333 19.41333333 4.05333334 27.2 0 49.38666667-22.18666667 49.38666667-49.38666667 0.10666667-27.30666667-22.08-49.38666667-49.38666667-49.38666667z m0 67.62666667c-10.02666667 0-18.24-8.21333333-18.24-18.24 0-10.02666667 8.21333333-18.24 18.24-18.24 10.02666667 0 18.24 8.21333333 18.24 18.24 0.10666667 10.02666667-8.10666667 18.24-18.24 18.24z\",\n    fill: \"#5a60ff\",\n    \"p-id\": 28959\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M877.65333333 582.93333333l-71.78666666-104.10666666c37.65333333-35.2 61.44-85.22666667 61.44-140.90666667 0-106.56-86.4-192.96-192.96-192.96s-192.96 86.4-192.96 192.96 86.4 192.96 192.96 192.96c28.58666667 0 55.68-6.4 80-17.49333333l72.32 104.74666666c9.38666667 13.54666667 28.16 16.96 41.70666666 7.68l1.70666667-1.17333333c13.44-9.38666667 16.85333333-28.16 7.57333333-41.70666667zM674.13333333 493.12c-85.76 0-155.2-69.54666667-155.2-155.2S588.48 182.61333333 674.13333333 182.61333333s155.2 69.54666667 155.2 155.2S759.89333333 493.12 674.13333333 493.12z\",\n    fill: \"#5a60ff\",\n    \"p-id\": 28960\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M730.24 658.24c0 11.62666667-9.49333333 21.01333333-21.01333333 21.01333333H218.98666667c-11.62666667 0-21.01333333-9.49333333-21.01333334-21.01333333V249.38666667c0-11.62666667 9.49333333-21.01333333 21.01333334-21.01333334h236.16c5.86666667-12.05333333 12.69333333-23.68 20.37333333-34.56H200.96c-24.53333333 0-44.58666667 20.05333333-44.58666667 44.58666667v439.89333333c0 24.53333333 20.05333333 44.58666667 44.58666667 44.58666667h231.36v55.25333333H306.34666667c-13.54666667 0-24.64 11.09333333-24.64 24.64v1.70666667c0 13.54666667 11.09333333 24.64 24.64 24.64h315.41333333c13.54666667 0 24.64-11.09333333 24.64-24.64v-1.70666667c0-13.54666667-11.09333333-24.64-24.64-24.64H495.78666667v-55.25333333h231.36c24.53333333 0 44.58666667-20.05333333 44.58666666-44.58666667v-90.34666666c-13.33333333 4.48-27.2 8-41.49333333 10.24v60.05333333z\",\n    fill: \"#5a60ff\",\n    \"p-id\": 28961\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoginLogo);\nexport default __webpack_public_path__ + \"static/media/login-logo.e92480a29b02b5f48959a7e954fcce62.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport { Rate } from 'antd'\r\n\r\ninterface pinProps extends React.ComponentProps<typeof Rate> {\r\n  checked: boolean;\r\n  onCheckedChange?: (checkes: boolean) => void\r\n}\r\n\r\nexport const Pin = ({ checked, onCheckedChange, ...restProps }: pinProps) => {\r\n  return <Rate\r\n    count={1}\r\n    value={checked ? 1 : 0}\r\n    onChange={num => onCheckedChange?.(!!num)}\r\n    {...restProps}\r\n  />\r\n}","import { QueryKey, useQueryClient } from \"react-query\";\r\n\r\nexport const useConfig = (\r\n  queryKey: QueryKey,\r\n  callback: (target: any, old?: any[]) => any[]\r\n) => {\r\n  const queryClient = useQueryClient();\r\n  return {\r\n    onSuccess: () => queryClient.invalidateQueries(queryKey),\r\n    // 乐观更新\r\n    async onMutate(target: any) {\r\n      // 拿到缓存数据，用于回滚\r\n      const previousItems = queryClient.getQueryData(queryKey);\r\n      // 设置缓存数据\r\n\r\n      queryClient.setQueryData(queryKey, (old?: any[]) => {\r\n        return callback(target, old);\r\n      });\r\n      return { previousItems };\r\n    },\r\n    // 回滚\r\n    onError(error: any, newItem: any, context: any) {\r\n      // 上一个函数不管返回什么，都在context里\r\n      queryClient.setQueryData(queryKey, context.previousItems);\r\n    },\r\n  };\r\n};\r\n\r\nexport const useDeleteConfig = (queryKey: QueryKey) =>\r\n  useConfig(\r\n    queryKey,\r\n    (target, old) => old?.filter((item) => item.id !== target.id) || []\r\n  );\r\n\r\nexport const useEditConfig = (queryKey: QueryKey) =>\r\n  useConfig(\r\n    queryKey,\r\n    (target, old) =>\r\n      old?.map((item) =>\r\n        item.id === target.id ? { ...item, ...target } : item\r\n      ) || []\r\n  );\r\nexport const useAddConfig = (queryKey: QueryKey) =>\r\n  useConfig(queryKey, (target, old) => (old ? [...old, target] : []));\r\n","// 合并use-async\r\nimport Item from 'antd/lib/list/Item';\r\nimport { useState, useEffect, useCallback } from 'react'\r\nimport { QueryKey, useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { displayedListType } from '../types/questionnaire'\r\nimport { useQuestionnairesSearchParams } from '../screens/questionnaire-list/util';\r\nimport { cleanObject } from \"../utils\"\r\nimport { useAsync } from \"../utils/use-async\"\r\nimport { useHttp } from './http'\r\nimport { useAddConfig, useDeleteConfig, useEditConfig } from './use-optimistic-options';\r\n\r\n// inputContent：要传入的搜索的对象\r\n// displayedListType：问卷类型\r\n// 传入要搜索的id和name，都是displayedListType类型的一部分\r\nexport const useQuestionnaires = (inputContent?: Partial<displayedListType>) => {\r\n  const client = useHttp();\r\n  // const { run, ...result } = useAsync<displayedListType[]>()\r\n  // const fetchQuestionnaire = useCallback(() => client('questionnaires', { data: cleanObject(inputContent || {}) }), [client, inputContent])\r\n  // useEffect(() => {\r\n  //   // client返回一个promise，而run需要接收一个promise\r\n  //   run(fetchQuestionnaire(), { retry: fetchQuestionnaire })\r\n  // }, [inputContent, run, fetchQuestionnaire]);\r\n  // return result\r\n  return useQuery<displayedListType[]>(['questionnaires', inputContent], () => client('questionnaires', { data: cleanObject(inputContent || {}) }))\r\n}\r\n\r\n// 收藏问卷\r\nexport const useEditQuestionnaires = (queryKey: QueryKey) => {\r\n  const client = useHttp()\r\n  // const { run, ...asyncResult } = useAsync()\r\n  // const mutate = (params: Partial<displayedListType>) => {\r\n  //   return run(client(`questionnaires/${params.id}`, {\r\n  //     data: params,\r\n  //     method: 'PATCH'\r\n  //   }))\r\n  // }\r\n  // return {\r\n  //   mutate,\r\n  //   ...asyncResult\r\n  // }\r\n  // 用原来存储时传入的数据，拿到key\r\n  return useMutation(\r\n    (params: Partial<displayedListType>) =>\r\n      client(`questionnaires/${params.id}`, {\r\n        method: 'PATCH',\r\n        data: params\r\n      }),\r\n    // useMutation的第二个参数可用key取出值自动刷新\r\n    useEditConfig(queryKey)\r\n  )\r\n}\r\n\r\n// 添加问卷\r\nexport const useAddQuestionnaires = (queryKey: QueryKey) => {\r\n  const client = useHttp()\r\n  // const { run, ...asyncResult } = useAsync()\r\n  // const mutate = (params: Partial<displayedListType>) => {\r\n  //   return run(client(`questionnaires${params.id}`, {\r\n  //     data: params,\r\n  //     method: 'POST'\r\n  //   }))\r\n  // }\r\n  // return {\r\n  //   mutate,\r\n  //   ...asyncResult\r\n  // }\r\n  return useMutation(\r\n    (params: Partial<displayedListType>) => client(`questionnaires`, {\r\n      method: 'POST',\r\n      data: params\r\n    }),\r\n    // useMutation的第二个参数可用key取出值自动刷新\r\n    useAddConfig(queryKey)\r\n  )\r\n}\r\n\r\n// 删除问卷\r\nexport const useDeleteQuestionnaires = (queryKey: QueryKey) => {\r\n  const client = useHttp()\r\n  return useMutation(\r\n    ({ id }: { id: number }) => client(`questionnaires/${id}`, {\r\n      method: 'DELETE'\r\n    }),\r\n    // useMutation的第二个参数可用key取出值自动刷新\r\n    useDeleteConfig(queryKey)\r\n  )\r\n}\r\n\r\n// 获取量表详情\r\nexport const useQuestionnaire = (id?: number) => {\r\n  const client = useHttp();\r\n  return useQuery(\r\n    // questionnaire是缓存的key\r\n    // {id}是变化时触发刷新\r\n    ['questionnaire', { id }],\r\n    () => client(`questionnire/${id}`),\r\n    // useQuery的第三个参数是配置参数，只有在id有值时才触发\r\n    { enabled: Boolean(id) }\r\n  )\r\n}","import { useMemo, useState } from 'react';\r\nimport { URLSearchParamsInit, useSearchParams } from 'react-router-dom'\r\nimport { cleanObject, subset } from '../utils/index';\r\n\r\n// 返回页面url中，指定健的参数值\r\nexport const useUrlQueryParam = <K extends string>(keys: K[]) => {\r\n  const [searchParams] = useSearchParams();\r\n  const setSearchParams = useSetUrlSearchParam();\r\n  const [stateKeys] = useState(keys);\r\n  return [\r\n    // useMemo:只有在searchParams改变时，才进行这个运算\r\n    useMemo(\r\n      () =>\r\n        subset(Object.fromEntries(searchParams), stateKeys) as {\r\n          [key in K]: string;\r\n        },\r\n      [searchParams, stateKeys]\r\n    ),\r\n    (params: Partial<{ [key in K]: unknown }>) => {\r\n      return setSearchParams(params);\r\n      // iterator\r\n      // iterator: https://codesandbox.io/s/upbeat-wood-bum3j?file=/src/index.js\r\n    },\r\n  ] as const;\r\n};\r\n\r\n// 设置url参数\r\nexport const useSetUrlSearchParam = () => {\r\n  const [searchParams, setSearchParam] = useSearchParams();\r\n  // 使他可以接受所有key，只要是字符串就可以\r\n  return (params: { [key in string]: unknown }) => {\r\n    const o = cleanObject({\r\n      ...Object.fromEntries(searchParams),\r\n      ...params,\r\n    }) as URLSearchParamsInit;\r\n    return setSearchParam(o);\r\n  };\r\n};","import { useMemo } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useQuestionnaire } from \"../../utils/questionnaire\";\r\nimport { useSetUrlSearchParam, useUrlQueryParam } from \"../../utils/url\";\r\n\r\n// 搜索问卷\r\nexport const useQuestionnairesSearchParams = () => {\r\n  // input搜索框里的数据\r\n  // const [, setInputContent] = useState({\r\n  //   title: '',  //input里的\r\n  //   id: ''     //select里的,代表type的id\r\n  // })\r\n  // 从url中得到的都是string类型，需要转换\r\n  const [inputContent, setInputContent] = useUrlQueryParam(['title', 'typeId']);\r\n  return [\r\n    useMemo(() => ({ ...inputContent, typeId: Number(inputContent.typeId) || undefined }), [inputContent]),\r\n    setInputContent\r\n  ] as const\r\n}\r\n\r\n// 取出Questionnaire的queryKey\r\nexport const useQuestionnaireQueryKey = () => {\r\n  const [params] = useQuestionnairesSearchParams()\r\n  return ['questionnaires', params];\r\n}\r\n\r\n// 读取url里对应的参数，相当于全局状态管理器\r\nexport const useQuestionnaireModal = () => {\r\n  const [{ questionnaireCreate }, setQuestionnaireCreate] = useUrlQueryParam([\r\n    'questionnaireCreate'\r\n  ])\r\n  const [{ editingQuestionnaireId }, setEditingQuestionnaireId] = useUrlQueryParam([\r\n    'editingQuestionnaireId'\r\n  ])\r\n\r\n  const setUrlParams = useSetUrlSearchParam()\r\n  const { data: editingQuestionnaire, isLoading } = useQuestionnaire(Number(editingQuestionnaireId))\r\n\r\n\r\n  const open = () => setQuestionnaireCreate({ questionnaireCreate: true });\r\n  // const close = () => {\r\n  //   setQuestionnaireCreate({ questionnaireCreate: undefined });\r\n  //   setEditingQuestionnaireId({ editingQuestionnaireId: undefined });\r\n  // }\r\n  const close = () => setUrlParams({ questionnaireCreate: \"\", editingQuestionnaireId: \"\" });\r\n\r\n  const startEdit = (id: number) => setEditingQuestionnaireId({ editingQuestionnaireId: id })\r\n\r\n  return {\r\n    // 打开条件是Boolean(editingQuestionnaireId),而不是Boolean(editingQuestionnaire)\r\n    // 有id就打开，而不是等数据返回\r\n    questionnaireModalOpen: questionnaireCreate === 'true' || Boolean(editingQuestionnaireId),\r\n    open,\r\n    close,\r\n    startEdit,\r\n    editingQuestionnaire,\r\n    isLoading\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Dropdown, Menu, Modal, Table } from 'antd';\r\nimport dayjs from 'dayjs'\r\nimport { TableProps } from 'antd/es/table'\r\nimport { questionnaireType } from './search-panel';\r\nimport { render } from '@testing-library/react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Pin } from '../../components/pin';\r\nimport { useDeleteQuestionnaires, useEditQuestionnaires } from '../../utils/questionnaire';\r\nimport { ButtonNoPadding } from '../../components/lib';\r\nimport { useAuth } from '../../context/auth-context';\r\nimport { useQuestionnaireModal, useQuestionnaireQueryKey } from './util';\r\nimport { displayedListType } from '../../types/questionnaire'\r\nimport { useMemo } from 'react';\r\n\r\n\r\n\r\n\r\n// 直接把父组件传的参数，透传到这里，直接在父组件里传dataSource属性\r\n// TableProps代表Table组件的所有参数集合的类型\r\n// ListProps包含TableProps<displayedListType> 和 questionnaireTypes\r\ninterface ListProps extends TableProps<displayedListType> {\r\n  // displayedList: displayedListType[];\r\n  questionnaireTypes: questionnaireType[],\r\n  // questionnaireButton: JSX.Element\r\n}\r\n\r\n// { questionnaireTypes, ...props }取出questionnaireTypes，剩下的键值全放在props里\r\nexport const List = React.memo(({ questionnaireTypes, ...props }: ListProps) => {\r\n  const { user } = useAuth()\r\n  const { mutate } = useEditQuestionnaires(useQuestionnaireQueryKey())\r\n  const pinQuestionnaire = (id: number) => (pin: boolean) => mutate({ id, pin });\r\n\r\n  return <Table\r\n    rowKey={\"id\"}\r\n    loading\r\n    pagination={false}\r\n    columns={[\r\n      {\r\n        title: <Pin checked={true} disabled={true} />,\r\n        render(value, questionnaire) {\r\n          // 先得到questionnaire.id,当函数传入pin时，才得到pin  ----  函数柯里化\r\n          return <Pin checked={questionnaire.pin} onCheckedChange={pinQuestionnaire(questionnaire.id)} />\r\n        }\r\n      },\r\n      {\r\n        title: '问卷名称',\r\n        // dataIndex: 'title', //在对应的questionnair上读name属性\r\n        sorter: (a, b) => a.title.localeCompare(b.title),  //localeCompare可以排序中文\r\n        render(value, questionnaire) {\r\n          // react-router-dom中的Link，to属性代表渲染路由的子路由\r\n          return <Link to={String(questionnaire.id)}>{questionnaire.title}</Link>\r\n        }\r\n      },\r\n      {\r\n        title: '说明',\r\n        dataIndex: 'discription', //在对应的questionnair上读name属性\r\n      },\r\n      {\r\n        title: '总分',\r\n        dataIndex: 'fullScore', //在对应的questionnair上读name属性\r\n      },\r\n      {\r\n        title: '问卷类型',\r\n        render(value, questionnaire) {\r\n          return <span>\r\n            {questionnaireTypes.find(type => type.id === questionnaire.typeId)?.name || \"未找到该类型\"}\r\n          </span>\r\n        }\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        render(value, questionnaire) {\r\n          return <span>\r\n            {\r\n              questionnaire.createTime ? dayjs(questionnaire.createTime).format('YYYY-MM-DD') : '无'\r\n            }\r\n          </span>\r\n        }\r\n      },\r\n      {\r\n        render(value, questionnaire) {\r\n          return <More questionnaire={questionnaire} />\r\n        }\r\n      }\r\n    ]}\r\n    // dataSource={displayedList}\r\n    {...props}\r\n  >\r\n  </Table>\r\n})\r\n\r\nconst More = ({ questionnaire }: { questionnaire: displayedListType }) => {\r\n  const { user } = useAuth()\r\n  const { startEdit } = useQuestionnaireModal();\r\n  const editQuestionnaire = (id: number) => () => startEdit(id)\r\n  const { mutate: deleteQuestionnaire } = useDeleteQuestionnaires(useQuestionnaireQueryKey())\r\n\r\n  const confirmDeleteQuestionnaire = (id: number) => {\r\n    Modal.confirm({\r\n      title: `确定删除问卷“${questionnaire.title}”吗？`,\r\n      content: '点击确定删除',\r\n      okText: '确定',\r\n      cancelText: '取消',\r\n      onOk: () => deleteQuestionnaire({ id })\r\n    })\r\n  }\r\n  return <Dropdown\r\n    overlay={\r\n      <Menu>\r\n        {\r\n          user?.identity === 1 ?\r\n            <>\r\n              <Menu.Item key={'edit'} onClick={editQuestionnaire(questionnaire.id)}>编辑</Menu.Item>\r\n              <Menu.Item key={'delete'} onClick={() => confirmDeleteQuestionnaire(questionnaire.id)}>删除</Menu.Item>\r\n            </>\r\n            : null\r\n        }\r\n      </Menu>\r\n    }>\r\n    <ButtonNoPadding type={\"link\"}>...</ButtonNoPadding>\r\n  </Dropdown>\r\n}","import { useHttp } from \"./http\";\r\nimport { useAsync } from \"./use-async\";\r\nimport { useEffect } from \"react\";\r\nimport { cleanObject } from \"./index\";\r\nimport { User } from \"../types/user\";\r\nimport { questionnaireType } from \"../screens/questionnaire-list/search-panel\";\r\n\r\nexport const useQuestionnaireTypes = (param?: Partial<questionnaireType>) => {\r\n  const client = useHttp();\r\n  const { run, ...result } = useAsync<questionnaireType[]>();\r\n  useEffect(() => {\r\n    run(client(\"questionnaireTypes\", { data: cleanObject(param || {}) }));\r\n  }, [param]);\r\n  return result;\r\n};\r\n","import { Select } from 'antd'\r\nimport React from 'react'\r\nimport { Raw } from '../types'\r\n\r\n// Select组件上的所有参数类型\r\ntype SelectProps = React.ComponentProps<typeof Select>\r\n\r\n// 可以让参数接收Select组件的所有参数，自定义属性\r\ninterface IdSelectProps extends Omit<SelectProps, 'value' | 'onChange' | 'options'> {\r\n  value?: Raw | null | undefined,\r\n  onChange?: (value?: number) => void,\r\n  defaultOptionName?: string,\r\n  options?: { name: string, id: number }[]\r\n}\r\n\r\n// 使select传入的id不管是什么类型，都转换为number\r\nexport const IdSelect = (props: IdSelectProps) => {\r\n  const { value, onChange, defaultOptionName, options, ...restProps } = props\r\n  return <Select\r\n    value={options?.length ? toNumber(value) : 0}\r\n    // toNumber如果是0，那就传入undefined\r\n    onChange={value => onChange?.(toNumber(value) || undefined)}\r\n    {...restProps}\r\n  >\r\n    {\r\n      // toNumber会把其他值都转为0，都匹配到defaultOptionName上\r\n      defaultOptionName ? <Select.Option value={0}>{defaultOptionName}</Select.Option> : null\r\n    }\r\n    {\r\n      options?.map(option => <Select.Option key={option.id} value={option.id}>{option.name}</Select.Option>)\r\n    }\r\n  </Select>\r\n}\r\n\r\n\r\n// 将值转换为number类型\r\nconst toNumber = (value: unknown) => isNaN(Number(value)) ? 0 : Number(value) ","import React from 'react'\r\nimport { useQuestionnaireTypes } from '../utils/questionnaire-types'\r\nimport { IdSelect } from './id-select'\r\n\r\n// 按类型搜索的参数\r\nexport const QuestionnaireTypeSelect = (props: React.ComponentProps<typeof IdSelect>) => {\r\n  const { data: types } = useQuestionnaireTypes()\r\n  return <IdSelect options={types || []} {...props}></IdSelect>\r\n}","import { Form, Input, Select } from 'antd';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport React from 'react'\r\nimport { useEffect, useState } from \"react\"\r\nimport { QuestionnaireTypeSelect } from '../../components/type-select';\r\nimport { displayedListType } from '../../types/questionnaire'\r\n\r\n\r\nexport interface questionnaireType {\r\n  id: number;\r\n  name: string\r\n}\r\n\r\ninterface SearchPanelProps {\r\n  questionnaireTypes: questionnaireType[],\r\n  inputContent: Partial<Pick<displayedListType, 'title' | 'typeId'>>\r\n  // inputContent: {\r\n  //   title: string;\r\n  //   id: string;\r\n  // },\r\n  setInputContent: (inputContent: SearchPanelProps['inputContent']) => void;\r\n}\r\n\r\nexport const SearchPanel = ({ questionnaireTypes, inputContent, setInputContent }: SearchPanelProps) => {\r\n\r\n\r\n\r\n  // select选择框里要显示的的问卷类型\r\n\r\n\r\n  return <Form layout={\"inline\"} style={{ marginBottom: '2rem' }}>\r\n    <Form.Item>\r\n      <Input\r\n        type=\"text\"\r\n        placeholder={'问卷名称'}\r\n        value={inputContent.title}\r\n        onChange={evt => {\r\n          setInputContent({\r\n            ...inputContent,\r\n            title: evt.target.value\r\n          })\r\n\r\n        }} />\r\n    </Form.Item>\r\n    <Form.Item>\r\n      <QuestionnaireTypeSelect\r\n        defaultOptionName={'问卷类型'}\r\n        value={inputContent.typeId}\r\n        onChange={value => setInputContent({\r\n          ...inputContent,\r\n          typeId: value\r\n        })}\r\n      >\r\n      </QuestionnaireTypeSelect>\r\n      {/* <Select\r\n        value={inputContent.typeId}\r\n      >\r\n        <Select.Option value={''}>问卷类型</Select.Option>\r\n        {\r\n          questionnaireTypes.map(item => <Select.Option key={item.id} value={item.id}>{item.name}</Select.Option>)\r\n        }\r\n      </Select> */}\r\n    </Form.Item>\r\n  </Form>\r\n}","import { List } from \"./list\"\r\nimport { displayedListType } from '../../types/questionnaire'\r\nimport { SearchPanel } from \"./search-panel\"\r\nimport React, { useState, useEffect, Profiler } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { cleanObject, useDebounce, useDocumentTitle, useMount } from \"../../utils\"\r\nimport * as qs from \"qs\"\r\nimport { useHttp } from \"../../utils/http\"\r\nimport { Button, Typography } from \"antd\"\r\nimport { useAsync } from \"../../utils/use-async\"\r\nimport { useQuestionnaires } from \"../../utils/questionnaire\"\r\nimport { useQuestionnaireTypes } from \"../../utils/questionnaire-types\"\r\nimport { Helmet } from 'react-helmet'\r\nimport { useUrlQueryParam } from \"../../utils/url\"\r\nimport { useQuestionnaireModal, useQuestionnairesSearchParams } from \"./util\"\r\nimport { ButtonNoPadding, ErrorBox, Row } from \"../../components/lib\"\r\nimport { useAuth } from \"../../context/auth-context\"\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL\r\n\r\nexport const QuestionnaireListScreen = () => {\r\n  const { user } = useAuth()\r\n  const { open } = useQuestionnaireModal()\r\n  useDocumentTitle('心理量表', false)\r\n  const [inputContent, setInputContent] = useQuestionnairesSearchParams()\r\n  // const [inputContent] = useUrlQueryParam(['title', 'id'])\r\n\r\n  // 问卷类型\r\n  // const [questionnaireTypes, setQuestionnaireTypes] = useState([]);\r\n\r\n  // 输入框内容停留2s，才发送请求\r\n  // const debouncedInputContent = useDebounce(inputContentNum, 200);\r\n\r\n  // const client = useHttp();\r\n\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  // const [error, setError] = useState<null | Error>(null)\r\n  // 查找之后展示的数据\r\n  // const [displayedList, setDisplayedList] = useState([])\r\n  // const { run, isLoading, error, data: displayedList } = useAsync<displayedListType[]>()\r\n  const { isLoading, error, data: displayedList } = useQuestionnaires(useDebounce(inputContent, 200));\r\n  // questionnaire变化时请求接口\r\n  // useEffect(() => {\r\n  // client返回一个promise，而run需要接收一个promise\r\n  // run(client('questionnaires', { data: cleanObject(debouncedInputContent) }))\r\n  // 或\r\n  //name=${inputContent.name}&typeId=${inputContent.id}\r\n  // fetch(`${apiUrl}/questionnaires?${qs.stringify(cleanObject(debouncedInputContent))}`).then(async response => {\r\n  //   if (response.ok) {\r\n  //     // console.log(await response.json());\r\n  //     setDisplayedList(await response.json())\r\n  //   }\r\n  // })\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [debouncedInputContent])\r\n\r\n\r\n  // 页面加载时加载questionnaireTypes类型\r\n  // 自定义hook\r\n  // useMount(() => {\r\n  //   client('questionnaireTypes')\r\n  //     .then(setQuestionnaireTypes)\r\n  // fetch(`${apiUrl}/questionnaireTypes`).then(async response => {\r\n  //   if (response.ok) {\r\n  //     setQuestionnaireTypes(await response.json())\r\n  //   }\r\n  // })\r\n  // })\r\n  const { data: questionnaireTypes } = useQuestionnaireTypes()\r\n\r\n  // 设置网页的document.title\r\n\r\n\r\n  return (\r\n    <Container>\r\n      {/* <Helmet><title>问卷中心</title></Helmet> */}\r\n      <Row between={true}>\r\n        <h1>心理量表</h1>\r\n        {\r\n          user?.identity === 1 ?\r\n            <ButtonNoPadding\r\n              onClick={open}\r\n              type={\"link\"}>\r\n              创建量表\r\n            </ButtonNoPadding>\r\n            : null\r\n        }\r\n      </Row>\r\n      <SearchPanel questionnaireTypes={questionnaireTypes || []} inputContent={inputContent} setInputContent={setInputContent} />\r\n      <ErrorBox error={error} />\r\n      <List\r\n        // refresh={retry}\r\n        loading={isLoading}\r\n        questionnaireTypes={questionnaireTypes || []}\r\n        dataSource={displayedList || []}\r\n      // questionnaireButton={\r\n      //   <ButtonNoPadding\r\n      //     onClick={open}\r\n      //     type={\"link\"}>\r\n      //     创建量表\r\n      //   </ButtonNoPadding>\r\n      // }\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nQuestionnaireListScreen.whyDidYouRender = true;\r\n\r\nconst Container = styled.div`\r\n  padding: 3.2rem;\r\n`","import React from 'react'\r\n\r\nexport const EditQuestionnaireScreen = () => {\r\n  return <h1>编辑</h1>\r\n}","import React from 'react'\r\n\r\nexport const SettingQuestionnaireScreen = () => {\r\n  return <h1>设置</h1>\r\n}","import React from 'react'\r\nimport { useDocumentTitle } from '../../utils'\r\nimport { useQuestionnaireReport } from '../../utils/questionnaireReport';\r\nimport { useQuestionnaireInUrl } from './util';\r\n\r\n\r\nexport const ReportQuestionnaireScreen = () => {\r\n  useDocumentTitle('报表');\r\n  // const { data: currentQuestionnaire } = useQuestionnaireInUrl()\r\n  const currentQuestionnaire = {\r\n    \"id\": 0,\r\n    \"title\": \"问卷1\",\r\n    \"discription\": \"问卷说明\",\r\n    \"typeId\": 1,\r\n    \"fullScore\": 150,\r\n    \"rank\": \"名次--暂无\",\r\n    \"creater\": \"创建人\",\r\n    \"createTime\": \"1546900800000\",\r\n    \"logo\": \"logo\",\r\n    \"pin\": true\r\n  }\r\n  // const { data: reports } = useQuestionnaireReport()\r\n  const reports = [\r\n    {\r\n      name: '报告标题1',\r\n    },\r\n    {\r\n      name: '报告标题2',\r\n    }\r\n  ]\r\n  return <>\r\n    <h1>{currentQuestionnaire?.title}报表</h1>\r\n    {\r\n      reports?.map(report => <div>\r\n        {report.name}\r\n      </div>)\r\n    }\r\n  </>\r\n} ","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Routes, Route, Navigate } from 'react-router'\r\nimport { EditQuestionnaireScreen } from '../edit'\r\nimport { SettingQuestionnaireScreen } from '../setting'\r\nimport { ReportQuestionnaireScreen } from '../report'\r\nimport styled from '@emotion/styled'\r\n\r\nexport const QuestionaireScreen = () => {\r\n  return <div>\r\n    <h1>QuestionaireScreen</h1>\r\n    <Link style={{ marginRight: '10px' }} to={'/edit'}>编辑</Link>\r\n    <Link style={{ marginRight: '10px' }} className='link' to={'/setting'}>设置</Link>\r\n    <Link style={{ marginRight: '10px' }} className='link' to={'/report'}>报表</Link>\r\n    <Routes>\r\n      <Route path={'report'} element={<ReportQuestionnaireScreen />}></Route>\r\n      <Route path={'edit'} element={<EditQuestionnaireScreen />}></Route>\r\n      <Route path={'setting'} element={<SettingQuestionnaireScreen />}></Route>\r\n      {/* <Navigate to={window.location.pathname + '/data'} /> */}\r\n      <Route path=\"*\" element={<Navigate to={window.location.pathname + '/report'} replace={true} />} />\r\n    </Routes>\r\n  </div>\r\n}\r\n\r\n","import styled from \"@emotion/styled\"\r\nimport { Button, Drawer, Form, Input, Select, Spin } from \"antd\"\r\nimport { useForm } from \"antd/es/form/Form\"\r\nimport { useEffect } from \"react\"\r\nimport { ErrorBox } from \"../../components/lib\"\r\nimport { QuestionnaireTypeSelect } from \"../../components/type-select\"\r\nimport { useAddQuestionnaires, useEditQuestionnaires } from \"../../utils/questionnaire\"\r\nimport { useQuestionnaireModal, useQuestionnaireQueryKey } from \"./util\"\r\n\r\n\r\nexport const QuestionnaireModal = () => {\r\n  const { questionnaireModalOpen, close, editingQuestionnaire, isLoading } = useQuestionnaireModal()\r\n  const useMutateQuestionnaire = editingQuestionnaire ? useEditQuestionnaires : useAddQuestionnaires;\r\n  // 选异步，因为要等结果返回再关闭窗口渲染结果\r\n  const { mutateAsync, error, isLoading: mutateLoading } = useMutateQuestionnaire(useQuestionnaireQueryKey());\r\n  const [form] = useForm()\r\n\r\n  const onFinish = (values: any) => {\r\n    mutateAsync({ ...editingQuestionnaire, ...values }).then(() => {\r\n      form.resetFields();\r\n      close();\r\n    })\r\n  }\r\n\r\n  // 关闭窗口的同时清空数据\r\n  const closeModal = () => {\r\n    // 清空输入框\r\n    form.resetFields();\r\n    close()\r\n  }\r\n\r\n  const title = editingQuestionnaire ? \"编辑量表\" : '创建量表'\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(editingQuestionnaire)\r\n  }, [editingQuestionnaire, form])\r\n\r\n\r\n  return <Drawer\r\n    forceRender={true}\r\n    width={'100%'}\r\n    visible={questionnaireModalOpen}\r\n    onClose={closeModal}\r\n  >\r\n    <Containner>\r\n      {isLoading ? <Spin size={\"large\"} /> : <>\r\n        <h1>{title}</h1>\r\n        <ErrorBox error={error} />\r\n        <Form\r\n          layout={\"vertical\"}\r\n          style={{ width: '40rem' }}\r\n          onFinish={onFinish}\r\n          form={form}\r\n        >\r\n          <Form.Item\r\n            label={'名称'}\r\n            name={'title'}\r\n            rules={[{ required: true, message: '请输入量表名' }]}\r\n          >\r\n            <Input placeholder=\"请输入量表名称\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={'类型'}\r\n            name={'typeId'}\r\n            rules={[{ required: true, message: '请选择量表类型' }]}\r\n          >\r\n            <QuestionnaireTypeSelect\r\n              defaultOptionName={\"请选择量表类型\"}>\r\n            </QuestionnaireTypeSelect>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={'总分'}\r\n            name={'fullScore'}\r\n            rules={[{ required: true, message: '请输入总分' }]}\r\n          >\r\n            <Input placeholder=\"请输入总分\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={'问卷说明'}\r\n            name={'discription'}\r\n          >\r\n            <Input placeholder=\"请输入问卷说明（选填）\" />\r\n          </Form.Item>\r\n          <Form.Item style={{ textAlign: 'right' }}>\r\n            <Button\r\n              loading={mutateLoading}\r\n              type={'primary'}\r\n              htmlType={\"submit\"}\r\n            >提交</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </>\r\n      }\r\n      <h1>Modal</h1>\r\n      <Button onClick={close}>关闭</Button>\r\n    </Containner>\r\n  </Drawer >\r\n}\r\n\r\nconst Containner = styled.div`\r\n  flex-direction: column;\r\n  height: 80vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`","import styled from \"@emotion/styled\";\r\nimport { Button, Divider, List, Popover, Typography } from \"antd\"\r\nimport { Content } from \"antd/lib/layout/layout\"\r\nimport { useAuth } from \"../context/auth-context\";\r\nimport { useQuestionnaireModal } from \"../screens/questionnaire-list/util\";\r\nimport { useQuestionnaires } from \"../utils/questionnaire\"\r\nimport { ButtonNoPadding } from \"./lib\";\r\n\r\nexport const QuestionnairePopover = () => {\r\n\r\n  const { user } = useAuth()\r\n  const { open } = useQuestionnaireModal()\r\n\r\n  const { data: questionnaires, isLoading } = useQuestionnaires();\r\n  const pinnedQuestionnaires = questionnaires?.filter((questionnaire) => questionnaire.pin)\r\n\r\n  const content = <ContentContainer>\r\n    <Typography.Text>收藏问卷</Typography.Text>\r\n    <List>\r\n      {\r\n        pinnedQuestionnaires?.map((pinned) => <List.Item>\r\n          <List.Item.Meta title={pinned.title} />\r\n        </List.Item>)\r\n      }\r\n    </List>\r\n    {\r\n      user?.identity === 1 ? (\r\n        <>\r\n          <Divider />\r\n          <ButtonNoPadding\r\n            onClick={open}\r\n            type={\"link\"}>\r\n            创建量表\r\n          </ButtonNoPadding>\r\n        </>) : null\r\n    }\r\n  </ContentContainer>\r\n\r\n  return <Popover\r\n    placement={\"bottom\"}\r\n    content={content}\r\n  >\r\n    <span>心理量表</span>\r\n  </Popover>\r\n\r\n}\r\n\r\n\r\nconst ContentContainer = styled.div`\r\n  min-width: 30rem;\r\n`","import { useAuth } from \"./context/auth-context\"\r\nimport styled from '@emotion/styled'\r\nimport { Button, Dropdown, Menu } from \"antd\"\r\nimport { Navigate, Route, Routes } from 'react-router'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport { QuestionnaireListScreen } from \"./screens/questionnaire-list\"\r\nimport { ButtonNoPadding, Row } from \"./components/lib\"\r\n// 用svg的方式，而不是img的方式渲染图片\r\nimport { ReactComponent as LoginLogo } from './assets/login-logo.svg'\r\nimport { QuestionaireScreen } from \"./screens/questionnaire\"\r\nimport { resetRoute } from \"./utils\"\r\nimport { useState } from \"react\"\r\nimport { QuestionnaireModal } from \"./screens/questionnaire-list/questionnaire-modal\"\r\nimport { QuestionnairePopover } from \"./components/questionnaire-popover\"\r\n\r\n//eslint-disable-next-line\r\nexport default () => {\r\n  // const [questionnaireModalOpen, setQuestionnaireModalOpen] = useState(false)\r\n  return <Container>\r\n    {/* {value.exist} */}\r\n    <Router>\r\n\r\n      <PageHeader />\r\n      <Main>\r\n        {/* <QuestionnaireListScreen /> */}\r\n        {/* BrowserRouter用于组件间共享信息，可以用reacthook获取 */}\r\n        {/* react-router6里，所有的router都要被包裹在Routes里面 */}\r\n        <Routes>\r\n          {/* /questionnaires */}\r\n          <Route\r\n            path={'/questionnaires'}\r\n            element={<QuestionnaireListScreen\r\n            // questionnaireButton={\r\n            //   <ButtonNoPadding\r\n            //     type={\"link\"}\r\n            //     onClick={() => setQuestionnaireModalOpen(true)}\r\n            //   >创建量表\r\n            //   </ButtonNoPadding>}\r\n            />}\r\n          >\r\n          </Route>\r\n          <Route path={'/questionnaires/:questionnaireId/*'} element={<QuestionaireScreen />}></Route>\r\n          <Route path=\"*\" element={<Navigate to=\"/questionnaires\" replace={true} />} />\r\n        </Routes>\r\n      </Main>\r\n      <Aside>aside</Aside>\r\n      <Footer>footer</Footer>\r\n      <QuestionnaireModal\r\n      // questionnaireModalOpen={questionnaireModalOpen}\r\n      // onClose={() => setQuestionnaireModalOpen(false)}\r\n      />\r\n    </Router>\r\n\r\n  </Container>\r\n}\r\n\r\nconst PageHeader = () => {\r\n  return <Header between={true}>\r\n    <HeaderLeft gap={true}>\r\n      <ButtonNoPadding type={'link'} onClick={resetRoute}>\r\n        {/* 用svg的方式，而不是img的方式渲染图片 */}\r\n        <LoginLogo style={{ margin: -10, }} height={'5rem'} width={'5rem'} color={'rgb(38, 132, 255)'} />\r\n        {/* <img src={LoginLogo} /> */}\r\n      </ButtonNoPadding>\r\n      <h3 style={{ fontWeight: 'bold' }}>胜任力系统</h3>\r\n      <span>首页</span>\r\n      {/* <h3>心理量表</h3>*/}\r\n      <QuestionnairePopover />\r\n      <span>数据中心</span>\r\n      <span>激光枪</span>\r\n      <span>测试与训练中心</span>\r\n    </HeaderLeft>\r\n    <HeaderRight>\r\n      <User />\r\n    </HeaderRight>\r\n  </Header>\r\n}\r\n\r\nconst User = () => {\r\n  const { user, logout } = useAuth()\r\n  return <Dropdown\r\n    overlay={\r\n      <Menu>\r\n        {\r\n          user?.identity === 1 ? '管理员' : '普通用户'\r\n        }\r\n        <Menu.Item key={'logout'}>\r\n          {/* <a onClick={logout}>登出</a> 用a标签建议跳转时才使用：href */}\r\n          <Button type={\"link\"} onClick={logout}>登出</Button>\r\n        </Menu.Item>\r\n      </Menu>}>\r\n    <Button type={\"link\"} onClick={e => e.preventDefault()}>Hi,{user?.name}</Button>\r\n  </Dropdown>\r\n}\r\n\r\n// 整个容器\r\nconst Container = styled.div`\r\n  display: grid; \r\n  grid-template-rows: 6rem 1fr 6rem;  //从上到下的大小 1fr表示自动\r\n  grid-template-columns: 20rem 1fr 20rem;  //从左到右的大小 1fr表示自动\r\n  grid-template-areas: \r\n  \"header header header\"  \r\n  \"main main aside\"\r\n  \"footer footer footer\";\r\n  height: 100vh;\r\n  grid-gap: 1rem;  //每一块的间距\r\n`\r\n// 整个布局，用grid-template-rows: 6rem calc(100vh - 6rem);代替\r\n// const PageHeader = styled.header`\r\n//   height: 6rem;\r\n// `\r\n// const Main = styled.main`\r\n//   height: calc(100vh - 6rem);  //整个视口-PageHeader\r\n// `\r\n\r\nexport const Header = styled(Row)`\r\n  grid-area: header;  //别名\r\n  padding: 3.2rem;\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\r\n  z-index: 1;\r\n`\r\nconst HeaderItem = styled.h3` \r\n  margin-right: 3rem;\r\n`\r\n\r\nexport const HeaderLeft = styled(Row)``;\r\n\r\nexport const HeaderRight = styled.div`\r\n  \r\n`\r\nconst Main = styled.main`grid-area: main;`\r\nconst Aside = styled.aside`grid-area: aside;`\r\nconst Footer = styled.footer`\r\ngrid-area: footer;\r\npadding: 3.2rem;\r\n`\r\n"],"names":["_defs","_path","_path2","_path3","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLoginLogo","_ref","svgRef","title","titleId","props","t","className","viewBox","xmlns","xmlnsXlink","width","height","ref","id","type","d","fill","ForwardRef","Pin","checked","onCheckedChange","restProps","count","value","onChange","num","useConfig","queryKey","callback","queryClient","useQueryClient","onSuccess","invalidateQueries","onMutate","previousItems","getQueryData","setQueryData","old","onError","error","newItem","context","useQuestionnaires","inputContent","client","useHttp","useQuery","data","cleanObject","useEditQuestionnaires","useMutation","params","method","map","item","useEditConfig","useAddQuestionnaires","useAddConfig","useDeleteQuestionnaires","filter","useDeleteConfig","useUrlQueryParam","useSearchParams","searchParams","setSearchParams","useSetUrlSearchParam","useState","stateKeys","useMemo","subset","fromEntries","setSearchParam","o","useQuestionnairesSearchParams","setInputContent","typeId","Number","undefined","useQuestionnaireQueryKey","useQuestionnaireModal","questionnaireCreate","setQuestionnaireCreate","editingQuestionnaireId","setEditingQuestionnaireId","setUrlParams","enabled","Boolean","useQuestionnaire","editingQuestionnaire","isLoading","questionnaireModalOpen","open","close","startEdit","List","React","questionnaireTypes","mutate","useAuth","user","rowKey","loading","pagination","columns","disabled","render","questionnaire","pin","sorter","a","b","localeCompare","to","String","dataIndex","find","name","createTime","dayjs","format","More","deleteQuestionnaire","overlay","identity","onClick","Modal","content","okText","cancelText","onOk","confirmDeleteQuestionnaire","useQuestionnaireTypes","param","useAsync","run","result","useEffect","IdSelect","defaultOptionName","options","toNumber","option","isNaN","QuestionnaireTypeSelect","types","SearchPanel","layout","style","marginBottom","placeholder","evt","QuestionnaireListScreen","useDocumentTitle","useDebounce","displayedList","Container","between","dataSource","whyDidYouRender","styled","EditQuestionnaireScreen","SettingQuestionnaireScreen","ReportQuestionnaireScreen","currentQuestionnaire","reports","report","QuestionaireScreen","marginRight","path","element","window","location","pathname","replace","QuestionnaireModal","mutateAsync","mutateLoading","useForm","form","setFieldsValue","forceRender","visible","onClose","resetFields","Containner","size","onFinish","values","then","label","rules","required","message","textAlign","htmlType","QuestionnairePopover","questionnaires","pinnedQuestionnaires","ContentContainer","pinned","placement","PageHeader","Main","Aside","Footer","Header","HeaderLeft","gap","resetRoute","margin","color","fontWeight","HeaderRight","User","logout","e","preventDefault","Row"],"sourceRoot":""}